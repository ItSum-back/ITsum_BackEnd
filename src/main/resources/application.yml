spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  security:
    oauth2:
      client:
        registration:
          google: # /oauth2/authorization/google 이 주소를 동작하게 한다.
            client-id: 머시기
            client-secret: 머시기
            scope:
              - email
              - profile

            # 네이버는 OAuth2.0 공식 지원대상이 아니라서 provider 설정이 필요하다.
            # 요청주소도 다르고, 응답 데이터도 다르기 때문이다.
          naver:
            client-id: 머시기
            client-secret: 머시기
            scope:
              - name
              - email
              - profile_image
            client-name: Naver # 클라이언트 네임은 구글 페이스북도 대문자로 시작하더라.
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
          kakao:
            client-id: 60ce8f9306c7f2f55b16f2bca433b65f
            redirect-uri: https://localhost:8080/oauth2/code
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            client-name: Kakao
            scope:
              - profile_nickname
              - account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.
logging:
  level:
    org.hibernate:
      type.descriptor.sql: trace #show parameter binding
      SQL: DEBUG

